{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport styles from \"../Styles/StylesLogin\";\nimport api from \"../api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var authData = yield api.post('/login', {\n          email: email,\n          password: password\n        });\n        if (authData.status === 200) {\n          yield AsyncStorage.setItem('token', authData.data.token);\n          dispatch({\n            type: 'logIn',\n            payload: true\n          });\n          navigation.navigate('Home');\n        } else {\n          alert('Email ou Senha Inválidos');\n          setPassword('');\n        }\n      } catch (error) {\n        alert('Email ou Senha Inválidos');\n        setPassword('');\n      }\n    });\n    return function onLoginPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.icon,\n      onPress: function onPress() {\n        return navigation.navigate('Introducao');\n      },\n      children: _jsx(AntDesign, {\n        name: \"arrowleft\",\n        size: 28,\n        color: \"black\"\n      })\n    }), _jsx(Image, {\n      source: require(\"../Imagens/5186397.jpg\"),\n      style: styles.image\n    }), _jsx(Text, {\n      style: styles.text3,\n      children: \"Login\"\n    }), _jsx(Text, {\n      style: styles.label1,\n      children: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(Text, {\n      style: styles.label2,\n      children: \"Senha do usu\\xE1rio\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setpassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.text,\n      onPress: onLoginPressed,\n      children: _jsx(Text, {\n        children: \"Logar\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.text2,\n      onPress: function onPress() {\n        return navigation.navigate('Recuperacao');\n      },\n      children: _jsx(Text, {\n        children: \"Esqueceu sua senha? Aperta aqui\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","TouchableOpacity","Text","Image","AntDesign","styles","api","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","onLoginPressed","_ref2","_asyncToGenerator","authData","post","status","AsyncStorage","setItem","data","token","dispatch","type","payload","navigate","alert","error","apply","arguments","style","container","children","icon","onPress","name","size","color","source","require","image","text3","label1","input","placeholder","value","onChangeText","label2","secureTextEntry","setpassword","text","text2"],"sources":["C:/Users/alessandro_bento/Documents/github/MyBookShelf/assets/Telas/TelaLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  Image,\r\n} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport styles from '../Styles/StylesLogin';\r\nimport api from \"../api\";\r\nexport default function Login({navigation}) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onLoginPressed = async () => {\r\n    try {\r\n        const authData = await api.post('/login', {\r\n            email: email,\r\n            password: password\r\n        })\r\n        if(authData.status === 200){\r\n            await AsyncStorage.setItem('token', authData.data.token)\r\n            dispatch({type:'logIn', payload: true})\r\n            navigation.navigate('Home')\r\n        } else {\r\n            alert('Email ou Senha Inválidos')\r\n            setPassword('')\r\n        }\r\n    } catch (error) {\r\n        alert('Email ou Senha Inválidos')\r\n        setPassword('')\r\n    }\r\n}\r\n\r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={styles.icon}\r\n      onPress={() => navigation.navigate('Introducao')}\r\n      >\r\n      <AntDesign name=\"arrowleft\" size={28} color=\"black\" />\r\n      </TouchableOpacity>\r\n       <Image source={require('../Imagens/5186397.jpg')} style={styles.image}/>\r\n      <Text style={styles.text3}>Login</Text>\r\n\r\n      <Text style={styles.label1}>Email</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <Text style={styles.label2}>Senha do usuário</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry={true}\r\n        value={password}\r\n        onChangeText={setpassword}\r\n      />\r\n      <TouchableOpacity style={styles.text}\r\n      onPress={onLoginPressed}\r\n      >\r\n        <Text>Logar</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity style={styles.text2}\r\n      onPress={() => navigation.navigate('Recuperacao')}\r\n      >\r\n        <Text>Esqueceu sua senha? Aperta aqui</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}